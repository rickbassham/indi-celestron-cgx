name: build-raspbian

on:
  release:
    types: [published]

jobs:
  build-raspbian:
    runs-on: ubuntu-20.04
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v1.0.3
        id: buildx
        with:
          install: true
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build the builder
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./raspbian.Dockerfile
          load: true
          tags: cgx-build-raspbian:latest
      - name: Build Package
        run: |
          docker run --rm -v `pwd`:/raspbian/output cgx-build-raspbian /bin/bash -c 'cd build/deb-indi-celestron-cgx && fakeroot-tcp debian/rules binary && cp ../indi-celestron-cgx_${{ steps.get_version.outputs.VERSION }}_armhf.deb /output/indi-celestron-cgx_${{ steps.get_version.outputs.VERSION }}-raspbian_armhf.deb'
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: debs-raspbian
          path: |
            *.deb
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./indi-celestron-cgx_${{ steps.get_version.outputs.VERSION }}-raspbian_armhf.deb
          asset_name: indi-celestron-cgx_${{ steps.get_version.outputs.VERSION }}-raspbian_armhf.deb
          asset_content_type: application/octet-stream
